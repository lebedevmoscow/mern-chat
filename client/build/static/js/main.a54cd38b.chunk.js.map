{"version":3,"sources":["actions/registered.js","actions/user.js","Components/RegisterModal/RegisterModal.js","Components/Chat/Chat.js","Components/WelcomeWindow/WelcomeWindow.js","utils/randomid.js","Components/404/404.js","Components/LoginModal/LoginModal.js","App.js","reducers/registered.js","reducers/user.js","reducers/index.js","store.js","index.js"],"names":["SET_USER_UNREGISTERED","SET_USER_REGISTERED","SET_USER_TO_LOCALSTORAGE","setUserRegistered","localStorage","setItem","type","setUserTokenToLocalStorage","token","payload","LOAD_USER_DATA","LOAD_USER_DATA_SUCCESS","LOAD_USER_DATA_FAIL","USER_CHOISE_ROOM","loadUserData","dispatch","a","getItem","fetch","method","headers","req","json","data","console","log","message","user","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","props","useDispatch","classes","React","useState","modalStyle","open","email","setemail","username","setusername","password","setpassword","password2","setpassword2","onChangeHandler","e","target","name","value","onSubmit","preventDefault","isPasswordEquals","toast","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","match","body","JSON","stringify","res","status","toString","success","msg","errors","map","pass1","pass2","style","className","id","placeholder","required","onChange","autoComplete","onClick","paddingTop","marginTop","to","Modal","aria-labelledby","aria-describedby","socket","connect","changeUserRoom","room","useSelector","state","selectedRoom","setSelectedRoom","redirect","setRedirect","redirectLogout","setRedirectLogOut","useEffect","loading","onSubmitHandler","action","parseInt","removeItem","generateId","uuidv4","Chat","setMsg","time","chat","setChat","users","setUsers","chatRef","useRef","openSocket","emit","on","listusers","prevchat","push","chatuser","off","current","scrollIntoView","disconnect","m","i","float","clear","ref","moment","format","error404","App","isRegistered","exact","path","component","RegisterModal","LoginModal","WelcomeWindow","initialState","registered","hashedPassword","combineReducers","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a54cd38b.chunk.js","sourcesContent":["// Action Types\r\nexport const SET_USER_UNREGISTERED = 'SET_USER_UNREGISTERED'\r\nexport const SET_USER_REGISTERED = 'SET_USER_REGISTERED'\r\nexport const SET_USER_TO_LOCALSTORAGE = 'SET_USER_TO_LOCALSTORAGE'\r\n\r\n// Deleting record in localstorage that users is registered\r\nexport const setUserUnregistered = () => {\r\n\tlocalStorage.removeItem('registered')\r\n\treturn {\r\n\t\ttype: SET_USER_UNREGISTERED,\r\n\t}\r\n}\r\n\r\n// Adding record in localstorage that users is registered\r\nexport const setUserRegistered = () => {\r\n\tlocalStorage.setItem('registered', true)\r\n\treturn {\r\n\t\ttype: SET_USER_REGISTERED,\r\n\t}\r\n}\r\n\r\n// Adding JWT Token to localstorage\r\nexport const setUserTokenToLocalStorage = (token) => {\r\n\tlocalStorage.setItem('user', token)\r\n\treturn {\r\n\t\ttype: SET_USER_TO_LOCALSTORAGE,\r\n\t\tpayload: token,\r\n\t}\r\n}\r\n","// Action types\r\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA'\r\nexport const LOAD_USER_DATA_SUCCESS = 'LOAD_USER_DATA_SUCCESS'\r\nexport const LOAD_USER_DATA_FAIL = 'LOAD_USER_DATA_FAIL'\r\nexport const USER_CHOISE_ROOM = 'USER_CHOISE_ROOM'\r\n\r\n// Fetch user data from server\r\nexport const loadUserData = () => async (dispatch) => {\r\n\t// Start loading\r\n\tdispatch({ type: LOAD_USER_DATA })\r\n\r\n\t// Getting JWT from localstorage\r\n\tconst token = localStorage.getItem('user')\r\n\r\n\tlet data\r\n\ttry {\r\n\t\t// Loading user data from server\r\n\t\tconst req = await fetch('http://localhost:3001/api/user', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'x-auth-token': token,\r\n\t\t\t},\r\n\t\t})\r\n\r\n\t\tdata = await req.json()\r\n\t} catch (e) {\r\n\t\tconsole.log('Cannot fetch user data', e.message || e)\r\n\t}\r\n\r\n\t// If during the request we face with error\r\n\tif (data.user) {\r\n\t\tdispatch({ type: LOAD_USER_DATA_SUCCESS, payload: data })\r\n\t} else {\r\n\t\tdispatch({ type: LOAD_USER_DATA_FAIL })\r\n\t}\r\n\r\n\treturn data\r\n}\r\n\r\n// If user want to change the room we'll gonna\r\n// mark this action in database (change the \"room\" record)\r\nexport const changeUserRoom = (room) => async (dispatch) => {\r\n\tconst token = localStorage.getItem('user')\r\n\ttry {\r\n\t\tawait fetch('http://localhost:3001/api/user/changeroom', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'x-auth-token': token,\r\n\t\t\t},\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify({ room: room }),\r\n\t\t})\r\n\r\n\t\tconsole.log('change room')\r\n\t\treturn dispatch({ type: USER_CHOISE_ROOM, payload: room })\r\n\t} catch (e) {\r\n\t\tconsole.log('Cannot Update User Room', e.message || e)\r\n\t}\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n\tsetUserRegistered,\r\n\tsetUserTokenToLocalStorage,\r\n} from './../../actions/registered'\r\nimport { LOAD_USER_DATA, LOAD_USER_DATA_SUCCESS } from './../../actions/user'\r\n\r\n// Styles\r\nimport './RegisterModal.sass'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\n// Style for Modal\r\nfunction getModalStyle() {\r\n\tconst top = 50\r\n\tconst left = 50\r\n\r\n\treturn {\r\n\t\ttop: `${top}%`,\r\n\t\tleft: `${left}%`,\r\n\t\ttransform: `translate(-${top}%, -${left}%)`,\r\n\t}\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tposition: 'absolute',\r\n\t\twidth: 400,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tborder: '2px solid #000',\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(2, 4, 3),\r\n\t},\r\n}))\r\n\r\nexport default function SimpleModal(props) {\r\n\tconst dispatch = useDispatch()\r\n\tconst classes = useStyles()\r\n\tconst [modalStyle] = React.useState(getModalStyle)\r\n\tconst [open] = React.useState(true)\r\n\r\n\t// FormData\r\n\tconst [email, setemail] = useState('')\r\n\tconst [username, setusername] = useState('')\r\n\tconst [password, setpassword] = useState('')\r\n\tconst [password2, setpassword2] = useState('')\r\n\r\n\tconst onChangeHandler = (e) => {\r\n\t\tswitch (e.target.name) {\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetemail(e.target.value)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'username':\r\n\t\t\t\tsetusername(e.target.value)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'password':\r\n\t\t\t\tsetpassword(e.target.value)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'password2':\r\n\t\t\t\tsetpassword2(e.target.value)\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\t// Check if password and password2 are the same\r\n\t\tif (!isPasswordEquals(password, password2)) {\r\n\t\t\treturn toast.error('Repeated password are incorrect', {\r\n\t\t\t\tposition: 'top-right',\r\n\t\t\t\tautoClose: 5000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// Check if email is do not match the RegEx (literally check on valid email)\r\n\t\tif (!email.match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)) {\r\n\t\t\treturn toast.error('Invalid email', {\r\n\t\t\t\tposition: 'top-right',\r\n\t\t\t\tautoClose: 5000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// Data for post request\r\n\t\tconst data = {\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\tusername,\r\n\t\t}\r\n\r\n\t\t// Register the user\r\n\t\tlet res = await fetch('http://localhost:3001/api/register', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t})\r\n\r\n\t\tres = await res.json()\r\n\r\n\t\t// If regestration has been successful\r\n\t\tif (res.status.toString() === '200') {\r\n\t\t\tdispatch(setUserRegistered())\r\n\t\t\tdispatch(setUserTokenToLocalStorage(res.token))\r\n\r\n\t\t\tconst user = { user: res.user }\r\n\t\t\tdispatch({ type: LOAD_USER_DATA })\r\n\t\t\tdispatch({ type: LOAD_USER_DATA_SUCCESS, payload: user })\r\n\r\n\t\t\treturn toast.success(res.msg, {\r\n\t\t\t\tposition: 'top-right',\r\n\t\t\t\tautoClose: 5000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// If it's not\r\n\t\tif (res.status.toString() === '409') {\r\n\t\t\treturn toast.error(res.msg, {\r\n\t\t\t\tposition: 'top-right',\r\n\t\t\t\tautoClose: 5000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (res.status.toString() === '400') {\r\n\t\t\treturn res.errors.map((error) => {\r\n\t\t\t\treturn toast.error(error, {\r\n\t\t\t\t\tposition: 'top-right',\r\n\t\t\t\t\tautoClose: 5000,\r\n\t\t\t\t\thideProgressBar: false,\r\n\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// Check on equals passwords\r\n\tconst isPasswordEquals = (pass1, pass2) => {\r\n\t\tif (pass1 === pass2) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Inner modal\r\n\tconst body = (\r\n\t\t<div\r\n\t\t\tstyle={modalStyle}\r\n\t\t\tclassName={`${classes.paper} registermodal__modal`}\r\n\t\t>\r\n\t\t\t<h2 id='simple-modal-title'>For chatting you have to register</h2>\r\n\t\t\t<small>Don't worry, it won't takes so much time</small>\r\n\t\t\t<h3>Please fill the form to register</h3>\r\n\t\t\t<form className='registermodal__form'>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tplaceholder='type email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t></input>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='username'\r\n\t\t\t\t\tplaceholder='type user name'\r\n\t\t\t\t\tname='username'\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t></input>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tplaceholder='type password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tautoComplete='on'\r\n\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t></input>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tplaceholder='repeat password'\r\n\t\t\t\t\tname='password2'\r\n\t\t\t\t\tvalue={password2}\r\n\t\t\t\t\tautoComplete='on'\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t></input>\r\n\t\t\t\t<button onClick={onSubmit}>Submit!</button>\r\n\t\t\t\t<h4 style={{ paddingTop: 20 }}>Do you have already account?</h4>\r\n\t\t\t\t<button style={{ marginTop: 20 }}>\r\n\t\t\t\t\t<Link to='/login'>Login!</Link>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n\r\n\tif (localStorage.getItem('user') && localStorage.getItem('registered')) {\r\n\t\tconsole.log('redirect')\r\n\t\treturn <Redirect to='/' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Modal\r\n\t\t\t\topen={open}\r\n\t\t\t\taria-labelledby='simple-modal-title'\r\n\t\t\t\taria-describedby='simple-modal-description'\r\n\t\t\t>\r\n\t\t\t\t{body}\r\n\t\t\t</Modal>\r\n\t\t\t<ToastContainer />\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport openSocket from 'socket.io-client'\r\nimport { generateId } from './../../utils/randomid'\r\n\r\nimport moment from 'moment'\r\n\r\n// Redux\r\nimport { useSelector } from 'react-redux'\r\n\r\n// Open up socket for listeting\r\nlet socket\r\n\r\nif (socket) {\r\n\tconsole.log('dadada')\r\n} else console.log('netnetnet')\r\n\r\nconst Chat = () => {\r\n\t// Entered message\r\n\tconst [msg, setMsg] = useState('')\r\n\r\n\tconst [chat, setChat] = useState({\r\n\t\tmessage: [],\r\n\t\tuser: [],\r\n\t\ttime: [],\r\n\t})\r\n\tconst [users, setUsers] = useState([])\r\n\r\n\tconst chatRef = useRef(null)\r\n\r\n\tconst user = useSelector((state) => state.user)\r\n\r\n\tconst onChangeHandler = (e) => {\r\n\t\tsetMsg(e.target.value)\r\n\t}\r\n\r\n\tconst onLogOutHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tsocket.disconnect()\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tsocket = openSocket('http://localhost:3001')\r\n\t\t// Notify server about connection\r\n\t\tif (user.username) {\r\n\t\t\tsocket.emit('user_join_the_chat', { user })\r\n\t\t}\r\n\t\t// Get result from server\r\n\t\tsocket.on('connect_user_client_processed', ({ user, listusers }) => {\r\n\t\t\tconsole.log('user', user)\r\n\t\t\tconsole.log('A user', user.username, 'connected the chat')\r\n\t\t\t// List of users\r\n\t\t\tconsole.log('uesrs', listusers)\r\n\t\t\tsetUsers(listusers[user.room - 1])\r\n\t\t})\r\n\t\t// When users send message\r\n\t\tsocket.on('user_send_message_processed', ({ msg, time, username }) => {\r\n\t\t\tconsole.log('msg', msg)\r\n\t\t\tconsole.log('time', time)\r\n\t\t\tconsole.log('username', username)\r\n\t\t\tconst prevchat = { ...chat }\r\n\t\t\tprevchat.user.push(username)\r\n\t\t\tprevchat.time.push(time)\r\n\t\t\tprevchat.message.push(msg)\r\n\t\t\tsetChat(prevchat)\r\n\t\t\tconsole.log('new message: ', msg)\r\n\t\t})\r\n\t\t// If this is the same user\r\n\t\tsocket.on('send_list_of_users', (listusers) => {\r\n\t\t\tsetUsers(listusers)\r\n\t\t})\r\n\t\t// When users disconnect\r\n\t\tsocket.on('user_disconedted', ({ chatuser, listusers }) => {\r\n\t\t\tconsole.log(chatuser, 'disconnected')\r\n\t\t\tsetUsers(listusers)\r\n\t\t})\r\n\t\t// Clean up\r\n\t\treturn () => {\r\n\t\t\tsocket.off('connect_user_client_processed')\r\n\t\t\tsocket.off('user_send_message_processed')\r\n\t\t\tsocket.off('send_list_of_users')\r\n\t\t\tsocket.off('user_disconedted')\r\n\t\t}\r\n\t}, [user])\r\n\r\n\t// To scroll down when submit the message\r\n\tuseEffect(() => {\r\n\t\tchatRef && chatRef.current && chatRef.current.scrollIntoView()\r\n\t}, [chat])\r\n\r\n\tconst onSubmitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tsetMsg('')\r\n\t\tconst time = moment().format('lll')\r\n\t\tsocket.emit('user_send_mesage', { msg, time, username: user.username })\r\n\t\tchatRef.current.scrollIntoView()\r\n\t}\r\n\r\n\t// PAGE AVIABLE ONLY FOR AUTHENTICATED USERS\r\n\tconst isRegistered = localStorage.getItem('user')\r\n\tif (!isRegistered && !user.loading) {\r\n\t\treturn <Redirect to='/' />\r\n\t}\r\n\r\n\tif (!user.room) {\r\n\t\treturn <Redirect to='/' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='chat-container'>\r\n\t\t\t<header className='chat-header'>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t<i className='fas fa-smile'></i> Chat by Boris Lebedev\r\n\t\t\t\t</h1>\r\n\t\t\t\t<button className='btn' onClick={onLogOutHandler}>\r\n\t\t\t\t\t<Link className='btn' to='/'>\r\n\t\t\t\t\t\tLeave Room\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</button>\r\n\t\t\t</header>\r\n\t\t\t<main className='chat-main'>\r\n\t\t\t\t<div className='chat-sidebar'>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t<i className='fas fa-comments'></i> Room number:\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<h2 id='room-name'>{user.room}</h2>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t<i className='fas fa-users'></i> Users\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<ul id='users'>\r\n\t\t\t\t\t\t{users &&\r\n\t\t\t\t\t\t\tusers.map((user) => {\r\n\t\t\t\t\t\t\t\tconst id = generateId()\r\n\t\t\t\t\t\t\t\treturn <li key={id}>{user}</li>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='chat-messages'>\r\n\t\t\t\t\t{chat &&\r\n\t\t\t\t\t\tchat.message &&\r\n\t\t\t\t\t\tchat.message.map((m, i) => {\r\n\t\t\t\t\t\t\tconst id = generateId()\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className='message' key={id}>\r\n\t\t\t\t\t\t\t\t\t<p className='meta'>\r\n\t\t\t\t\t\t\t\t\t\t{chat.user[i]} - {chat.time[i]}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className='text'>{m}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfloat: 'left',\r\n\t\t\t\t\t\t\tclear: 'both',\r\n\t\t\t\t\t\t\tpaddingTop: 20,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={chatRef}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t\t<div className='chat-form-container'>\r\n\t\t\t\t<form id='chat-form'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='msg'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Enter Message'\r\n\t\t\t\t\t\tvalue={msg}\r\n\t\t\t\t\t\tonChange={(e) => onChangeHandler(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={onSubmitHandler} className='btn'>\r\n\t\t\t\t\t\t<i className='fas fa-paper-plane'></i> Send\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chat\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './../../style.css'\r\n\r\n// Redux\r\nimport { useSelector, connect } from 'react-redux'\r\nimport { loadUserData, changeUserRoom } from './../../actions/user'\r\n\r\nconst WelcomeWindow = ({ changeUserRoom }) => {\r\n\t// User data\r\n\tconst user = useSelector((state) => state.user)\r\n\r\n\t// By default selected room is 1\r\n\tconst [selectedRoom, setSelectedRoom] = useState(1)\r\n\r\n\t// When need to redirect the user\r\n\tconst [redirect, setRedirect] = useState(null)\r\n\tconst [redirectLogout, setRedirectLogOut] = useState(null)\r\n\r\n\tuseEffect(() => {\r\n\t\t// Load the data to print the name in the modal window\r\n\t\tif (!user.username) {\r\n\t\t\tloadUserData()\r\n\t\t}\r\n\t}, [user])\r\n\r\n\t// If loading return spinner\r\n\tif (user.loading) {\r\n\t\treturn <h1>Loading...</h1>\r\n\t}\r\n\r\n\t// If user wants change the default room\r\n\tconst onChangeHandler = (e) => {\r\n\t\tconst value = parseInt(e.target.value, 10)\r\n\t\tsetSelectedRoom(value)\r\n\t}\r\n\r\n\t// Send request on database that we want change the room\r\n\tconst onSubmitHandler = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tawait changeUserRoom(selectedRoom)\r\n\t\tsetRedirect(true)\r\n\t}\r\n\r\n\t// Sign Out Handler\r\n\tconst onExitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlocalStorage.removeItem('registered')\r\n\t\tlocalStorage.removeItem('user')\r\n\t\tsetRedirectLogOut(true)\r\n\t}\r\n\r\n\tif (!localStorage.getItem('user') && !localStorage.getItem('registered')) {\r\n\t\treturn <Redirect to='/register' />\r\n\t}\r\n\r\n\tif (redirect) {\r\n\t\tconsole.log('redirect')\r\n\t\treturn <Redirect to='/chat' />\r\n\t}\r\n\r\n\tif (redirectLogout) {\r\n\t\treturn <Redirect to='/' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='join-container'>\r\n\t\t\t<header className='join-header'>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t<i className='fas fa-smile'></i> Chat by Boris Lebedev\r\n\t\t\t\t</h1>\r\n\t\t\t</header>\r\n\t\t\t<main className='join-main'>\r\n\t\t\t\t<form action='chat.html'>\r\n\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t<h1>Welcome, {user.username}</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t<label>Choise room where you want to join</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname='room'\r\n\t\t\t\t\t\t\tid='room'\r\n\t\t\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='1'>1</option>\r\n\t\t\t\t\t\t\t<option value='2'>2</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className='btn' onClick={onSubmitHandler}>\r\n\t\t\t\t\t\tJoin the chat\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className='btn' onClick={onExitHandler}>\r\n\t\t\t\t\t\tSign Out\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default connect(null, { loadUserData, changeUserRoom })(WelcomeWindow)\r\n","import { v4 as uuidv4 } from 'uuid'\r\n\r\nexport const generateId = () => {\r\n\treturn uuidv4()\r\n}\r\n","import React from 'react'\r\n\r\n// Simple 404 Page\r\nconst error404 = () => {\r\n\treturn <div>404</div>\r\n}\r\nexport default error404\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n\tsetUserRegistered,\r\n\tsetUserTokenToLocalStorage,\r\n} from './../../actions/registered'\r\nimport { LOAD_USER_DATA, LOAD_USER_DATA_SUCCESS } from './../../actions/user'\r\n\r\n// Styles\r\n\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\n// Style for Modal\r\nfunction getModalStyle() {\r\n\tconst top = 50\r\n\tconst left = 50\r\n\r\n\treturn {\r\n\t\ttop: `${top}%`,\r\n\t\tleft: `${left}%`,\r\n\t\ttransform: `translate(-${top}%, -${left}%)`,\r\n\t}\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tposition: 'absolute',\r\n\t\twidth: 400,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tborder: '2px solid #000',\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(2, 4, 3),\r\n\t},\r\n}))\r\n\r\nexport default function SimpleModal(props) {\r\n\tconst dispatch = useDispatch()\r\n\tconst classes = useStyles()\r\n\tconst [modalStyle] = React.useState(getModalStyle)\r\n\tconst [open] = React.useState(true)\r\n\r\n\t// FormData\r\n\tconst [email, setemail] = useState('')\r\n\tconst [password, setpassword] = useState('')\r\n\r\n\tconst onChangeHandler = (e) => {\r\n\t\tswitch (e.target.name) {\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetemail(e.target.value)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'password':\r\n\t\t\t\tsetpassword(e.target.value)\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\t// Check if email is do not match the RegEx (literally check on valid email)\r\n\t\tif (!email.match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)) {\r\n\t\t\treturn toast.error('Invalid email', {\r\n\t\t\t\tposition: 'top-right',\r\n\t\t\t\tautoClose: 5000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// Data for post request\r\n\t\tconst data = {\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t}\r\n\r\n\t\t// Register the user\r\n\t\tlet res = await fetch('http://localhost:3001/api/login', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t})\r\n\r\n\t\tres = await res.json()\r\n\t\tconsole.log('res', res)\r\n\r\n\t\t// If regestration has been successful\r\n\t\tif (res.status.toString() === '200') {\r\n\t\t\tdispatch(setUserRegistered())\r\n\t\t\tdispatch(setUserTokenToLocalStorage(res.token))\r\n\r\n\t\t\tconst user = { user: res.user }\r\n\t\t\tdispatch({ type: LOAD_USER_DATA })\r\n\t\t\tdispatch({ type: LOAD_USER_DATA_SUCCESS, payload: user })\r\n\r\n\t\t\treturn toast.success(res.msg, {\r\n\t\t\t\tposition: 'top-right',\r\n\t\t\t\tautoClose: 5000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// If it's not\r\n\t\tif (res.status.toString() === '409') {\r\n\t\t\treturn toast.error(res.msg, {\r\n\t\t\t\tposition: 'top-right',\r\n\t\t\t\tautoClose: 5000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (res.status.toString() === '400') {\r\n\t\t\treturn res.errors.map((error) => {\r\n\t\t\t\treturn toast.error(error, {\r\n\t\t\t\t\tposition: 'top-right',\r\n\t\t\t\t\tautoClose: 5000,\r\n\t\t\t\t\thideProgressBar: false,\r\n\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// Inner modal\r\n\tconst body = (\r\n\t\t<div\r\n\t\t\tstyle={modalStyle}\r\n\t\t\tclassName={`${classes.paper} registermodal__modal`}\r\n\t\t>\r\n\t\t\t<h2 id='simple-modal-title'>For chatting you have to login</h2>\r\n\t\t\t<h3>Please fill to login</h3>\r\n\t\t\t<form className='registermodal__form'>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tplaceholder='type email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t></input>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tplaceholder='type password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tautoComplete='on'\r\n\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t></input>\r\n\t\t\t\t<button onClick={onSubmit}>Submit!</button>\r\n\t\t\t\t<h4 style={{ paddingTop: 20 }}>Do not have already account?</h4>\r\n\t\t\t\t<button style={{ marginTop: 20 }}>\r\n\t\t\t\t\t<Link to='/login'>Register!</Link>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n\r\n\tif (localStorage.getItem('user') && localStorage.getItem('registered')) {\r\n\t\tconsole.log('redirect')\r\n\t\treturn <Redirect to='/' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Modal\r\n\t\t\t\topen={open}\r\n\t\t\t\taria-labelledby='simple-modal-title'\r\n\t\t\t\taria-describedby='simple-modal-description'\r\n\t\t\t>\r\n\t\t\t\t{body}\r\n\t\t\t</Modal>\r\n\t\t\t<ToastContainer />\r\n\t\t</div>\r\n\t)\r\n}\r\n","// Redux\nimport { useDispatch } from 'react-redux'\n\n// Actions\nimport {\n\tsetUserRegistered,\n\tsetUserTokenToLocalStorage,\n\tsetUserUnregistered,\n} from './actions/registered'\nimport { loadUserData } from './actions/user'\n\nimport { useEffect } from 'react'\n\n// Components\nimport RegisterModal from './Components/RegisterModal/RegisterModal'\nimport WelcomeWindow from './Components/WelcomeWindow/WelcomeWindow'\nimport Chat from './Components/Chat/Chat'\nimport error404 from './Components/404/404'\nimport LoginModal from './Components/LoginModal/LoginModal'\n\nimport { Route, Switch } from 'react-router-dom'\n\nconst App = () => {\n\t// Redux base stuff\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\tconst isRegistered = localStorage.getItem('user')\n\t\tif (!isRegistered) {\n\t\t\tdispatch(setUserUnregistered())\n\t\t} else {\n\t\t\tdispatch(setUserRegistered())\n\t\t\tdispatch(setUserTokenToLocalStorage(isRegistered))\n\t\t\tdispatch(loadUserData())\n\t\t}\n\t}, [dispatch])\n\n\t// if (!localStorage.getItem('user')) {\n\t// \treturn <Redirect to='/register' />\n\t// }\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/register' component={RegisterModal} />\n\t\t\t\t<Route exact path='/login' component={LoginModal} />\n\t\t\t\t<Route exact path='/' component={WelcomeWindow} />\n\t\t\t\t<Route exact path='/chat' component={Chat} />\n\t\t\t\t<Route component={error404} />\n\t\t\t</Switch>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// Types\r\nimport {\r\n\tSET_USER_REGISTERED,\r\n\tSET_USER_TO_LOCALSTORAGE,\r\n\tSET_USER_UNREGISTERED,\r\n} from './../actions/registered'\r\n\r\nconst initialState = {\r\n\tregistered: false,\r\n\tuser: null,\r\n}\r\n\r\nconst registered = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_REGISTERED:\r\n\t\t\treturn { ...initialState, registered: true }\r\n\t\tcase SET_USER_UNREGISTERED:\r\n\t\t\treturn { ...initialState, user: null, registered: false }\r\n\t\tcase SET_USER_TO_LOCALSTORAGE:\r\n\t\t\treturn { ...initialState, user: action.payload, registered: true }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default registered\r\n","import {\r\n\tLOAD_USER_DATA,\r\n\tLOAD_USER_DATA_FAIL,\r\n\tLOAD_USER_DATA_SUCCESS,\r\n\tUSER_CHOISE_ROOM,\r\n} from './../actions/user'\r\n\r\nconst initialState = {\r\n\tusername: null,\r\n\temail: null,\r\n\thashedPassword: null,\r\n\tloading: false,\r\n\terror: null,\r\n\troom: null,\r\n}\r\n\r\nconst user = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase LOAD_USER_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t}\r\n\t\tcase LOAD_USER_DATA_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: null,\r\n\t\t\t\temail: action.payload.user.email,\r\n\t\t\t\tusername: action.payload.user.username,\r\n\t\t\t\thashedPassword: action.payload.user.password,\r\n\t\t\t\troom: action.payload.user.room,\r\n\t\t\t}\r\n\t\tcase LOAD_USER_DATA_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: true,\r\n\t\t\t\tusername: null,\r\n\t\t\t\thashedPassword: null,\r\n\t\t\t\troom: null,\r\n\t\t\t}\r\n\t\tcase USER_CHOISE_ROOM:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troom: action.payload,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default user\r\n","import { combineReducers } from 'redux'\r\nimport registered from './registered'\r\nimport user from './user'\r\n\r\nexport default combineReducers({ registered, user })\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\n// Reducers\r\nimport reducer from './reducers'\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n\treducer,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n)\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n\n// Redux\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}